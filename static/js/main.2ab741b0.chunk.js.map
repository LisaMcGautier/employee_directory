{"version":3,"sources":["utils/API.js","components/EmployeeTable.js","components/SearchForm.js","components/DirectoryContainer.js","App.js","index.js"],"names":["axios","get","EmployeeTable","props","className","scope","employees","map","employee","index","src","picture","thumbnail","alt","first","name","last","email","phone","location","postcode","gender","SearchForm","htmlFor","onChange","handleInputChange","value","search","type","placeholder","id","onClick","handleFormSubmit","DirectoryContainer","state","getEmployees","API","then","response","console","log","data","results","setState","catch","err","event","target","preventDefault","searchDirectory","handleEmployeeSlice","slice","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"4NAUe,EACH,WACR,OAAOA,IAAMC,IARD,iDCyCDC,MA3Cf,SAAuBC,GACrB,OACE,wBAAOC,UAAU,iDAAjB,UACE,uBAAOA,UAAU,aAAjB,SACE,+BACE,oBAAIC,MAAM,MAAV,gBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,kBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,mBACA,oBAAIA,MAAM,MAAV,sBACA,oBAAIA,MAAM,MAAV,yBAIJ,gCAEIF,EAAMG,UAAUC,KAAI,SAACC,EAAUC,GAE7B,OAEE,+BACE,oBAAIJ,MAAM,MAAV,SAAiBI,EAAQ,IACzB,6BACE,qBAAKC,IAAKF,EAASG,QAAQC,UAAWC,IAAKL,EAASM,UAEtD,6BAAKN,EAASO,KAAKD,QACnB,6BAAKN,EAASO,KAAKC,OACnB,6BAAKR,EAASS,QACd,6BAAKT,EAASU,QACd,6BAAKV,EAASW,SAASC,WACvB,6BAAKZ,EAASa,WAVPZ,YCARa,MAtBf,SAAoBnB,GAClB,OACE,+BACE,sBAAKC,UAAU,aAAf,UACE,uBAAOmB,QAAQ,SAAf,qBACA,uBACEC,SAAUrB,EAAMsB,kBAChBC,MAAOvB,EAAMwB,OACbZ,KAAK,SACLa,KAAK,OACLxB,UAAU,eACVyB,YAAY,sBACZC,GAAG,WAEL,wBAAQC,QAAS5B,EAAM6B,iBAAkB5B,UAAU,uBAAnD,0BC4DO6B,E,4MArEbC,MAAQ,CACNP,OAAQ,GACRrB,UAAW,I,EASb6B,aAAe,WACbC,IACGC,MAAK,SAAAC,GAGJC,QAAQC,IAAIF,EAASG,KAAKC,SAG1B,EAAKC,SAAS,CAAErC,UAAWgC,EAASG,KAAKC,aAExCE,OAAM,SAAAC,GAAG,OAAIN,QAAQC,IAAIK,O,EAIhCpB,kBAAoB,SAAAqB,GAClB,IAAM/B,EAAO+B,EAAMC,OAAOhC,KACpBW,EAAQoB,EAAMC,OAAOrB,MAC3B,EAAKiB,SAAL,eACG5B,EAAOW,IAEVa,QAAQC,IAAIM,EAAMC,OAAOrB,Q,EAI3BM,iBAAmB,SAAAc,GACjBA,EAAME,iBACN,EAAKC,gBAAgB,EAAKf,MAAMP,S,EAElCsB,gBAAkB,SAAAH,K,EAKlBI,oBAAsB,WACpB,IAAM5C,EAAY,EAAK4B,MAAM5B,UAC7B,EAAKqC,SAAS,CAAErC,UAAWA,EAAU6C,MAAM,O,kEAvC3CC,KAAKjB,iB,+BA6CL,OACE,sBAAK/B,UAAU,YAAf,UACE,wBAAQ2B,QAASqB,KAAKF,oBAAtB,mBAEA,cAAC,EAAD,CACEvB,OAAQyB,KAAKlB,MAAMP,OACnBK,iBAAkBoB,KAAKpB,iBACvBP,kBAAmB2B,KAAK3B,oBAG1B,cAAC,EAAD,CAAenB,UAAW8C,KAAKlB,MAAM5B,mB,GA/DZ+C,aCClBC,MAJf,WACE,OAAO,cAAC,EAAD,K,MCCTC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2ab741b0.chunk.js","sourcesContent":["import axios from \"axios\";\n\n// Limit responses from the API to US nationality\n\nconst BASEURL = \"https://randomuser.me/api/?nat=US&results=30\";\n\n// Export an object with a \"retrieve\" method that calls the randomuser API \n\n//Line 7:1:  Assign object to a variable before exporting as module default  import/no-anonymous-default-export\n// eslint-disable-next-line\nexport default {\n  retrieve: function () {\n    return axios.get(BASEURL);\n  }\n};\n","import React from \"react\";\r\n\r\nfunction EmployeeTable(props) {\r\n  return (\r\n    <table className=\"table table-striped table-bordered table-hover\">\r\n      <thead className=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">ID</th>\r\n          <th scope=\"col\">Photo</th>\r\n          <th scope=\"col\">First</th>\r\n          <th scope=\"col\">Last</th>\r\n          <th scope=\"col\">Email</th>\r\n          <th scope=\"col\">Phone</th>\r\n          <th scope=\"col\">Zip Code</th>\r\n          <th scope=\"col\">Gender</th>\r\n        </tr>\r\n\r\n      </thead>\r\n      <tbody>\r\n        {\r\n          props.employees.map((employee, index) => {\r\n            // console.log(employee.id)\r\n            return (\r\n\r\n              <tr key={index}>\r\n                <th scope=\"row\">{index + 1}</th>\r\n                <td>\r\n                  <img src={employee.picture.thumbnail} alt={employee.first} />\r\n                </td>\r\n                <td>{employee.name.first}</td>\r\n                <td>{employee.name.last}</td>\r\n                <td>{employee.email}</td>\r\n                <td>{employee.phone}</td>\r\n                <td>{employee.location.postcode}</td>\r\n                <td>{employee.gender}</td>\r\n              </tr>\r\n            )\r\n          })\r\n        }\r\n\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default EmployeeTable;","import React from \"react\";\n\nfunction SearchForm(props) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"search\">Search:</label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.search}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search for employee\"\n          id=\"search\"\n        />\n        <button onClick={props.handleFormSubmit} className=\"btn btn-success mt-3\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React, { Component } from \"react\";\n\nimport API from \"../utils/API\";\nimport EmployeeTable from \"./EmployeeTable\";\nimport SearchForm from \"./SearchForm\";\n\nclass DirectoryContainer extends Component {\n  state = {\n    search: \"\",\n    employees: []\n  };\n\n  // When this component mounts, get a list of employees\n  componentDidMount() {\n    this.getEmployees()\n  }\n\n  // AJAX call to randomuser API\n  getEmployees = () => {\n    API.retrieve()\n      .then(response => {\n        //console.log(response)\n        //console.log(response.data)\n        console.log(response.data.results)\n        // console.log(response.data.results[0])\n\n        this.setState({ employees: response.data.results })\n\n      }).catch(err => console.log(err));\n  };\n\n  // code that will listen to events on the page and update state\n  handleInputChange = event => {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.setState({\n      [name]: value\n    });\n    console.log(event.target.value);\n  };\n\n  // When the form is submitted, search the employees array for `this.state.search`\n  handleFormSubmit = event => {\n    event.preventDefault();\n    this.searchDirectory(this.state.search);\n  };\n  searchDirectory = event => {\n\n  }\n\n  // sample method slice \n  handleEmployeeSlice = () => {\n    const employees = this.state.employees;\n    this.setState({ employees: employees.slice(15) })\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"container\">\n        <button onClick={this.handleEmployeeSlice}>Slice</button>\n\n        <SearchForm\n          search={this.state.search}\n          handleFormSubmit={this.handleFormSubmit}\n          handleInputChange={this.handleInputChange}\n        />\n\n        <EmployeeTable employees={this.state.employees} />\n\n      </div>\n    );\n  }\n}\n\nexport default DirectoryContainer;\n","import React from \"react\";\nimport DirectoryContainer from \"./components/DirectoryContainer\";\n\nfunction App() {\n  return <DirectoryContainer />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}